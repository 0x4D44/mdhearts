
    fn ensure_card_back_bitmap_for(state: &mut AppState, rt: &ID2D1HwndRenderTarget) -> Result<()> {
        if state.card_back_bitmap.is_some() { return Ok(()); }
        const BACK_PNG: &[u8] = include_bytes!("../../../../assets/card_back.png");
        let stream: IWICStream = unsafe { state.wic.CreateStream()? };
        unsafe {
            stream.InitializeFromMemory(BACK_PNG)?;
            let decoder = state.wic.CreateDecoderFromStream(&stream, std::ptr::null(), WICDecodeMetadataCacheOnLoad)?;
            let frame: IWICBitmapFrameDecode = decoder.GetFrame(0)?;
            let converter: IWICFormatConverter = state.wic.CreateFormatConverter()?;
            converter.Initialize(&frame, &GUID_WICPixelFormat32bppPBGRA, WICBitmapDitherTypeNone, None, 0.0, WICBitmapPaletteTypeCustom)?;
            let bmp = rt.CreateBitmapFromWicBitmap(&converter, None)?;
            state.card_back_bitmap = Some(bmp);
        }
        Ok(())
    }



